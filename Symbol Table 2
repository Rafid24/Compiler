#include<bits/stdc++.h>
using namespace std;

struct table
{
    char var[10];
    int value;
};

struct table tbl[20];
int i,j,n;
void create();;
int search(char variable[],int n);
void insert();
void display();

int main()
{
    int ch,result=0;
    char v[10];

    do
    {
        printf("\nEnter your choice:\n1.Create\n2.Search\n3.Display\n4.Exit\n");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1:
                create();
                break;
            case 2:
                printf("Enter the variable to be searched\n");
                scanf("%s",&v);
                result=search(v,n);
                if(result==0)
                    printf("The variable does not belong to the table\n");
                else
                    printf("Location of variable is %d",result);
                break;
            case 3:
                display();
                break;
            case 4:
                exit(1);
        }
    }
    while(ch!=4);
        int getch();
}


void create()
{
    printf("Enter the number of Entries\n");
    scanf("%d",&n);
    printf("Enter the Variable & Value:\n");
    for(i=1;i<=n;i++)
    {
        scanf("%s %d",tbl[i].var,&tbl[i].value);
        check:
        if(tbl[i].var[0]>='0' && tbl[i].var[0]<='9')
        {
            printf("The variable should start with an alphabet\nEnter the correct variable name\n");
            scanf("%s%d",tbl[i].var,&tbl[i].value);
            goto check;
        }
        check1:
        for(j=1;j<1;j++)
        {
            if(strcmp(tbl[i].var,tbl[j].var)==0)
            {
                printf("The variable already exists.\nEnter another variable\n");
                scanf("%s%d",tbl[i].var,&tbl[i].value);
                goto check1;
            }
        } 
    }
    printf("The table after creation is\n");
    display();
}


void insert()
{
    if(i>=20)
    printf("Cannot insert. Table is full");
    else
    {
        n++;
        printf("Enter the variable and value\n");
        scanf("%s%d",tbl[n].var,&tbl[n].value);
        check:
        if(tbl[i].var[0]>='0' && tbl[i].var[0]<='9')
        {
            printf("The variable should start with alphabet\nEnter the correct variable name\n");
            scanf("%s%d",tbl[i].var,&tbl[i].value);
            goto check;
        }
        check1:
        for(j=1;j<n;j++)
        {
            if(strcmp(tbl[j].var,tbl[i].var)==0)
            {
                printf("The variable already exist\nEnter another variable\n");
                scanf("%s%d",tbl[i].var,&tbl[i].value);
                goto check1;
            }
        }
        printf("The table after insertion is\n");
        display();
    }
}


void modify()
{
    char variable[10];
    int result=0;
    printf("Enter the variable to be modified\n");
    scanf("%s",&variable);
    result=search(variable,n);
    if(result==0)
        printf("%s does not belong to the table",variable);
    else
    {
        printf(" %s is %d Enter the new variable and its value",tbl[result].var,tbl[result].value);
        scanf("%s%d",tbl[result].var,&tbl[result].value);
        check:
        if(tbl[i].var[0]>='0' && tbl[i].var[0] <= '9')
        {
            printf("The variable should start with alphabet\n Enter the correct variable name\n");
            scanf("%s%d",tbl[i].var,&tbl[i].value);
            goto check;
        }
    }
    printf("The table after modification is\n");
    display();
}


int search(char variable[],int n)
{
    int flag;
    for(i=1;i<=n;i++)
    {
        if(strcmp(tbl[i].var,variable)==0)
        {
            flag=1;
            break;
        }
    }
    if(flag==1)
        return i;
    else
        return 0;
}


void display()
{
    printf("Variable\t value\n");
    for(i=1;i<=n;i++)
    printf("%s\t\t%d\n",tbl[i].var,tbl[i].value);
}
